{"version":3,"sources":["../src/index.ts","../src/components/ui/button.tsx","../src/lib/utils.ts","../src/components/ui/card.tsx","../src/components/ui/modal.tsx","../src/components/ui/dropdown.tsx","../src/components/common/navbar.tsx","../src/components/common/sidebar.tsx"],"sourcesContent":["export * from \"./components/ui/button\";\nexport * from \"./components/ui/card\";\nexport * from \"./components/ui/modal\";\nexport * from \"./components/ui/dropdown\";\nexport * from \"./components/common/navbar\";\nexport * from \"./components/common/sidebar\";\nexport * from \"./lib/utils\";\n","import * as React from \"react\";\nimport { cn } from \"../../lib/utils\";\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: \"default\" | \"outline\" | \"ghost\" | \"link\";\n  size?: \"default\" | \"sm\" | \"lg\";\n}\n\nconst buttonVariants = {\n  default: \"bg-blue-600 text-white hover:bg-blue-700\",\n  outline: \"border border-blue-600 text-blue-600 bg-transparent hover:bg-blue-50\",\n  ghost: \"bg-transparent hover:bg-blue-50 text-blue-600\",\n  link: \"underline text-blue-600 hover:text-blue-800 bg-transparent p-0 h-auto min-w-0\"\n};\n\nconst sizeVariants = {\n  default: \"px-4 py-2 text-base\",\n  sm: \"px-3 py-1 text-sm\",\n  lg: \"px-6 py-3 text-lg\"\n};\n\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant = \"default\", size = \"default\", ...props }, ref) => {\n    return (\n      <button\n        ref={ref}\n        className={cn(\n          \"rounded transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 font-medium\",\n          buttonVariants[variant],\n          sizeVariants[size],\n          className\n        )}\n        {...props}\n      />\n    );\n  }\n);\nButton.displayName = \"Button\";\n","import { clsx, type ClassValue } from 'clsx';\nimport { twMerge } from 'tailwind-merge';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","import * as React from \"react\";\nimport { cn } from \"../../lib/utils\";\n\nexport interface CardProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const Card = React.forwardRef<HTMLDivElement, CardProps>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn(\n        \"rounded-lg border bg-white p-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n);\nCard.displayName = \"Card\";\n","import * as React from \"react\";\nimport { cn } from \"../../lib/utils\";\n\nexport interface ModalProps extends React.HTMLAttributes<HTMLDivElement> {\n  open: boolean;\n  onClose: () => void;\n}\n\nexport const Modal: React.FC<ModalProps> = ({ open, onClose, className, children, ...props }) => {\n  if (!open) return null;\n  return (\n    <div className={cn(\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\", className)} {...props}>\n      <div className=\"bg-white rounded-lg shadow-lg p-6 relative\">\n        <button\n          className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-600\"\n          onClick={onClose}\n          aria-label=\"Close\"\n        >\n          Ã—\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { cn } from \"../../lib/utils\";\n\nexport interface DropdownProps {\n  label: string;\n  items: string[];\n  onSelect: (item: string) => void;\n}\n\nexport const Dropdown: React.FC<DropdownProps> = ({ label, items, onSelect }) => {\n  const [open, setOpen] = React.useState(false);\n  return (\n    <div className=\"dropdown relative\">\n      <button\n        className=\"dropdown__trigger px-4 py-2 bg-blue-600 text-white rounded\"\n        onClick={() => setOpen((o) => !o)}\n      >\n        {label}\n      </button>\n      <div className={cn(\"dropdown__menu\", open && \"dropdown__menu--open\")}\n        style={{ minWidth: 180 }}\n      >\n        {open && items.map((item) => (\n          <div\n            key={item}\n            className=\"dropdown__item\"\n            onClick={() => {\n              onSelect(item);\n              setOpen(false);\n            }}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { cn } from \"../../lib/utils\";\nimport \"./navbar.scss\";\n\nexport interface NavbarProps extends React.HTMLAttributes<HTMLElement> {\n  title?: string;\n}\n\nexport const Navbar: React.FC<NavbarProps> = ({ title = \"Navbar\", className, ...props }) => (\n  <nav className={cn(\"navbar flex items-center px-4 py-2\", className)} {...props}>\n    <span className=\"font-bold text-lg\">{title}</span>\n  </nav>\n);\n","import * as React from \"react\";\nimport { cn } from \"../../lib/utils\";\nimport \"./sidebar.scss\";\n\n\nexport interface SidebarProps {\n  items: string[];\n  onSelect?: (item: string) => void;\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nexport const Sidebar: React.FC<SidebarProps> = ({ items, onSelect, className, style }) => (\n  <aside className={cn(\"sidebar\", className)} style={style}>\n    <ul>\n      {items.map((item) => (\n        <li\n          key={item}\n          className=\"cursor-pointer py-2 px-3 rounded hover:bg-gray-700\"\n          onClick={() => onSelect?.(item)}\n        >\n          {item}\n        </li>\n      ))}\n    </ul>\n  </aside>\n);\n"],"mappings":"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","names":["React","import_jsx_runtime","import_jsx_runtime","React","import_jsx_runtime","import_jsx_runtime","import_jsx_runtime"]}